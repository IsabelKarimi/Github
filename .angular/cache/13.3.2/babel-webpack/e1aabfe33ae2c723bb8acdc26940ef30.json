{"ast":null,"code":"import { User } from 'src/app/classes/user/user';\nimport { Repos } from 'src/app/classes/repository/repos';\nimport { environment } from 'src/environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UsrepodataService = /*#__PURE__*/(() => {\n  class UsrepodataService {\n    constructor(http) {\n      this.http = http;\n      this.gottenUserdetails = new User(\"\", \"\", \"\", \"\", \"\", 0, 0);\n      this.gottenReporepodetails = new Repos(\"\", \"\", \"\", \"\");\n    } //Api request to getting User Details\n\n\n    fetchUserRequest(ghubUsername) {\n      let userPromise = new Promise((resolve, reject) => this.http.get(environment.baseUrl + '/' + ghubUsername + '??access_token=' + environment.apiKey).toPromise().then(response => {\n        this.gottenUserdetails = response;\n        resolve();\n        console.log();\n      }, error => {\n        reject(error);\n        console.log(error);\n      }));\n      return userPromise;\n    } ////Api request to getting Repo Details\n\n\n    fetchUserRepositoryRequest(ghubUsername) {\n      let userRepoPromise = new Promise((resolve, reject) => {\n        this.http.get(environment.baseUrl + '/' + ghubUsername + '/repos?sort=created&direction=desc?access_token=' + environment.apiKey).toPromise().then(response => {\n          this.gottenReporepodetails = response;\n          resolve();\n        }, error => {\n          reject(error);\n          console.log(error);\n        });\n      });\n      return userRepoPromise;\n    }\n\n  }\n\n  UsrepodataService.ɵfac = function UsrepodataService_Factory(t) {\n    return new (t || UsrepodataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UsrepodataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsrepodataService,\n    factory: UsrepodataService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsrepodataService;\n})();","map":null,"metadata":{},"sourceType":"module"}